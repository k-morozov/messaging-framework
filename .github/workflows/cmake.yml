name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build_release:
    runs-on: ubuntu-latest
    container:
      image: kstmorozov/protocol-env:latest
    
    steps:
    - uses: actions/checkout@v2

    - name: conan-profile
      run: |
        conan profile new goodok-profile --detect
        conan profile update settings.compiler.version=9.3 goodok-profile
        conan profile update settings.compiler.libcxx=libstdc++11 goodok-profile

    - name: Cache
      uses: actions/cache@v2.1.5
      with:
        # A list of files, directories, and wildcard patterns to cache and restore
        path: ~/.conan
        # An explicit key for restoring and saving the cache
        key: ${{ runner.os }}-cmake-${{ hashFiles('**/conanfile.txt') }}
        restore-keys: ${{ runner.os }}-cmake
        
    - name: conan-install
      run: |
        mkdir -p ${{github.workspace}}/build && mkdir -p ${{github.workspace}}/build/proto
        conan install -s build_type=${{env.BUILD_TYPE}} . --build=missing --profile goodok-profile -if ${{github.workspace}}/build
    
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run:  |
        cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
        cmake --build ${{github.workspace}}/build --target test

    - name: Test
#       working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: |
        ctest -C ${{env.BUILD_TYPE}}
        # cmake --build ${{github.workspace}}/build --target test
      
    - name: Package
      run: cmake --build ${{github.workspace}}/build --target package
      
#     - name: Deploy
#       # You may pin to the exact commit or the version.
#       # uses: alice-biometrics/release-creator@776aae43916758e40fc9420eb85f5659994f4a3e
#       uses: alice-biometrics/release-creator@v1.0.4
#       with:
#         # GitHub token
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         # New release version
#         version: 0.0.1
#         # New release description
#         description: nope
#         # Git repository where the release will be create
#         # Git repository branch where the release will be create
#         branch: master
#         # Define if new release is a draft or not
#         draft: true
#         # Define if new release is a prerelease or not
#         prerelease: true
  
